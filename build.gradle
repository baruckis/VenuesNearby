/*
 * Copyright 2019 Andrius Baruckis www.baruckis.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {

        gradle_version = '3.3.2'
        kotlin_version = '1.3.31'

        android_min_sdk_version = 23
        android_target_sdk_version = 28
        android_compile_sdk_version = 28
        android_build_tools_version = "28.0.3"

        // Libraries
        app_compat_version = '1.0.2'        // Adds support for the Action Bar user interface design pattern.
        javax_annotation_version = '1.3.2'  // Common Annotations for the JavaTM Platform API.
        javax_inject_version = '1'          // The Javax Inject API.
        lifecycle_version = '2.0.0'
        okhttp_version = '3.14.2'           // An HTTP & HTTP/2 client for Android and Java applications.
        retrofit_version = '2.5.0'          // HTTP client Retrofit.
        robolectric_version = '4.2.1'       // Robolectric is the industry-standard unit testing framework for Android.
        room_version = "2.0.0"              // Room is a database object mapping library.
        recyclerview_version = "1.0.0"      // Flexible view for providing a limited window into a large data set.
        rx_android_version = "2.1.1"        // Reactive extensions for Android.
        rx_kotlin_version = '2.3.0'         // RxKotlin.

        // Testing
        arch_testing = "2.0.0"
        junit_version = '4.12'
        assertj_version = '3.12.2'          // Rich and fluent assertions for testing for Java.
        mockito_kotlin_version = '2.1.0'
        test_core = '1.0.0'                 // The AndroidX Test Library provides an extensive framework for testing Android apps.
        test_runner_version = '1.1.1'       // Android testing library's runner.


        domainDependencies = [
                javaxInject:            "javax.inject:javax.inject:${javax_inject_version}",
                rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}"
        ]

        domainTestDependencies = [
                kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockitoKotlin:          "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockito_kotlin_version}"
        ]

        dataDependencies = [
                javaxInject:            "javax.inject:javax.inject:${javax_inject_version}",
                kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}"
        ]

        dataTestDependencies = [
                kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockitoKotlin:          "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockito_kotlin_version}"
        ]

        remoteDependencies = [
                kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                okHttp:                 "com.squareup.okhttp3:okhttp:${okhttp_version}",
                okHttpLogger:           "com.squareup.okhttp3:logging-interceptor:${okhttp_version}",
                rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}",
                retrofit:               "com.squareup.retrofit2:retrofit:${retrofit_version}",
                retrofitAdapter:        "com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}",
                retrofitConverter:      "com.squareup.retrofit2:converter-gson:${retrofit_version}"
        ]

        remoteTestDependencies = [
                kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockitoKotlin:          "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockito_kotlin_version}"
        ]

        cacheDependencies = [
                javaxInject:            "javax.inject:javax.inject:${javax_inject_version}",
                kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                roomCompiler:           "androidx.room:room-compiler:${room_version}",
                roomRuntime:            "androidx.room:room-runtime:${room_version}",
                roomRxJava:             "androidx.room:room-rxjava2:${room_version}",
                rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}"
        ]

        cacheTestDependencies = [
                archTesting:            "androidx.arch.core:core-testing:${arch_testing}",
                kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockitoKotlin:          "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockito_kotlin_version}",
                robolectric:            "org.robolectric:robolectric:${robolectric_version}",
                roomTesting:            "androidx.room:room-testing:${room_version}",
                testCore:               "androidx.test:core:${test_core}",
        ]

        presentationDependencies = [
                javaxInject:            "javax.inject:javax.inject:${javax_inject_version}",
                kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}",
                lifecycleCompiler:      "androidx.lifecycle:lifecycle-compiler:${lifecycle_version}",
                lifecycleExtensions:    "androidx.lifecycle:lifecycle-extensions:${lifecycle_version}"
        ]

        presentationTestDependencies = [
                archTesting:            "androidx.arch.core:core-testing:${arch_testing}",
                kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockitoKotlin:          "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockito_kotlin_version}",
                robolectric:            "org.robolectric:robolectric:${robolectric_version}"
        ]

        uiDependencies = [
                appCompat:              "androidx.appcompat:appcompat:${app_compat_version}",
                javaxInject:            "javax.inject:javax.inject:${javax_inject_version}",
                kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                recyclerView:           "androidx.recyclerview:recyclerview:${recyclerview_version}",
                rxAndroid:              "io.reactivex.rxjava2:rxandroid:${rx_android_version}",
                rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}"
        ]

        uiTestDependencies = [
                kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockitoKotlin:          "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockito_kotlin_version}"
        ]

    }

    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}


allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
